module espectra

    use kinds
    implicit none

    real(doublep) :: ER_start
    real(doublep) :: ER_stop
    real(doublep) :: ER_step

contains        

subroutine eventrate_spectra
    implicit none
    integer :: calc_num, num_calc
    real(doublep) :: recoil_energy, momentum_transfer
    real(doblep), allocatable :: event_rate_spectra

    print*,'What is the range of recoil energies?'
    print*,'Enter starting energy, stoping energy, step size:'
    read*,ER_start, ER_stop, ER_step

    num_calc = int((ER_start - ER_stop) / ER_step)

    allocate(even_rate_spectra(num_calc))

    do calc_num = 1, num_calc
        recoil_energy = ER_start + (calc_num - 1) * ER_step
        print*,'E_recoil = ',recoil_energy
        momentum_transfer = sqrt(2d0 * Miso
        event_rate_spectra(calc_num) = EventRate(Nt, rhochi, ve, v0, q, jchi, y)
    end do


end subroutine eventrate_spectra

end module spectra

