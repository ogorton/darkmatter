
!  ctrlchar = 'c'  count up # of states
!  ctrlchar = 'f'  fill up info on states
!  ctrlchar = 'p'  fill up parent reference states
!  ctrlchar = 'd'  fill up daughter reference states

!================================================

function nucResponse(tau1, tau2, ioption,y,Mtiso)

    use spspace
    use stateinfo
    implicit none

    integer :: ioption
    real(kind=8) :: y
    integer :: Mtiso

    integer :: j,a,b!,ap,an
    integer :: jmin, jmax
    
    integer :: op1, op2
    integer :: t,tt1,tt2
    integer :: tau1, tau2

    REAL(kind=8) :: Wigner_3j
    REAL(kind=8) :: spOME, spOME1,spOME2
    REAL(kind=8), dimension (0:1) :: IsoME,IsoME1,IsoME2
    REAL(kind=8), dimension (0:6,0:1) :: DRME, SRME, DRME1, SRME1, DRME2, SRME2 
    REAL(kind=8), dimension (0:1,0:1) :: nucResponse

    if (ioption .eq. 1) then   
        op1 = 1; op2 = 1
    else if (ioption .eq. 2) then
        op1 = 3; op2 = 3
    else if (ioption .eq. 3) then
        op1 = 4; op2 = 4
    else if (ioption .eq. 4) then
        op1 = 5; op2 = 5
    else if (ioption .eq. 5) then
        op1 = 6; op2 = 6
    else if (ioption .eq. 6) then
        op1 = 7; op2 = 7
    else if (ioption .eq. 7) then
        op1 = 3; op2 = 1
    else if (ioption .eq. 8) then
        op1 = 5; op2 = 6
    end if

    !print*,'operators: ',op1, op2
 
    IsoME(0:1)=0.d0
    DRME(0:6,0:1) = 0.d0
    SRME(0:6,0:1) = 0.d0

    IsoME1(0:1)=0.d0
    DRME1(0:6,0:1) = 0.d0
    SRME1(0:6,0:1) = 0.d0

    IsoME2(0:1)=0.d0
    DRME2(0:6,0:1) = 0.d0
    SRME2(0:6,0:1) = 0.d0

    nucResponse(0:1,0:1) = 0.d0

    if (ioption .le. 2) then
        jmin = 0
        jmax = 6
    else if (ioption .eq. 3) then
        jmin = 2
        jmax = 8
    else if (ioption .ge. 4 .and. ioption .le. 6) then
        jmin = 1
        jmax = 5
    else if (ioption .eq. 7) then
        jmin = 0
        jmax = 6
    end if

    Do j = jmin,jmax,2
        Do t = 0, 1
            Do a = 1, ntotal(1)
                Do b = 1, ntotal(1)
                    If (abs(densitymats%rho(j,t,a,b)) .ge. 1.0e-9) then

                        call OperME(op1,y,nodal(a),lorb(a),jorb(a),nodal(b),lorb(b),jorb(b),j,spOME1)
                        IsoME1(t)= spOME1 * sqrt(2.d0) *sqrt(2*dble(t)+1.0)
                        DRME1(j,t) = DRME1(j,t) + densitymats%rho(j,t,a,b)*IsoME1(t)
                        SRME1(j,t) = (-1.0)**((Tiso - Mtiso)/2)*Wigner_3j(Tiso,2*t,Tiso,-Mtiso,0,Mtiso)*DRME1(j,t)
                        print*,Wigner_3j(Tiso,2*t,Tiso,-Mtiso,0,Mtiso)

                        if (op1.ne.op2) then
                            call OperME(op2,y,nodal(a),lorb(a),jorb(a),nodal(b),lorb(b),jorb(b),j,spOME2)
                            IsoME2(t)= spOME2 * sqrt(2.d0) *sqrt(2*dble(t)+1.0)
                            DRME2(j,t) = DRME2(j,t) + densitymats%rho(j,t,a,b)*IsoME2(t)
                            SRME2(j,t) = (-1.0)**((Tiso - Mtiso)/2)*Wigner_3j(Tiso,2*t,Tiso,-Mtiso,0,Mtiso)*DRME2(j,t)
                        else
                            SRME2(j,t) = SRME1(j,t)
                        end if

                    end if
                end do
            end do
        end do
    end do
    Do j = jmin, jmax, 2
        Do tt1 = 0,1
            Do tt2 = 0,1
                nucResponse(tt1,tt2) = nucResponse(tt1,tt2)+ SRME1(j,tt1)*SRME2(j,tt2)
            end do
        end do
    end do

end function nucResponse
